//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.AdminServiceTest {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceTest.IAdminServices")]
    public interface IAdminServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminServices/SendEamil", ReplyAction="http://tempuri.org/IAdminServices/SendEamilResponse")]
        void SendEamil(string sendTo, string subject, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminServices/SendEamil", ReplyAction="http://tempuri.org/IAdminServices/SendEamilResponse")]
        System.Threading.Tasks.Task SendEamilAsync(string sendTo, string subject, string content);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServicesChannel : Services.AdminServiceTest.IAdminServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServicesClient : System.ServiceModel.ClientBase<Services.AdminServiceTest.IAdminServices>, Services.AdminServiceTest.IAdminServices {
        
        public AdminServicesClient() {
        }
        
        public AdminServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendEamil(string sendTo, string subject, string content) {
            base.Channel.SendEamil(sendTo, subject, content);
        }
        
        public System.Threading.Tasks.Task SendEamilAsync(string sendTo, string subject, string content) {
            return base.Channel.SendEamilAsync(sendTo, subject, content);
        }
    }
}
