@model MVCViews.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h2>注册</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>注册新用户</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @onblur = "CheckEmail()", @autocomplete="off" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <font color="red"><label id="email_err"></label></font>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.University, ViewData["University"] as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="注册" class="btn btn-warning" onclick="Register()"/>
                <input type="button" value="取消" class="btn" onclick="Cancel()" />
            </div>
        </div>
    </div>
}

<script>
    function Register() {
        var params = {
            Email: $("#Email").val(),
            Password: $("#Password").val(),
            ConfirmPassword: $("#ConfirmPassword").val(),
            UserName: $("#UserName").val(),
            Tel: $("#Tel").val(),
            University: $("#University").val(),
        }

        if (params.University.length <= 0) {
            alert("学校不能为空!");
            return;
        }

        $.ajax({
            url: "/Account/Register",
            type: "post",
            dataType: "json",
            data: params,
        }).done(function (json) {
            if (json.Status == 0) {
                alert("注册成功，请转到邮箱进行验证!");
                window.location.href = "/Account/UserInfo?email=" + params.Email;
            } else if (json.Status == 1) {
                alert("注册失败！");
            } else if (json.Status == 2) {
                alert("请不要重复注册! ");
            }
        })
    }

    function CheckEmail() {
        var params = { email: $("#Email").val(), }

        if (params.email.length <= 0) {
            $("#Email").css("background", "LightPink");
            $("#email_err").text("邮箱不能为空!");
            return;
        }

        var patt = new RegExp('^[a-z0-9]+([._\\-]*[a-z0-9])*@@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$');
        if (!patt.test(params.email)) {
            $("#Email").css("background", "LightPink");
            $("#email_err").text("邮箱格式错误!");
            return;
        }

        $.ajax({
            url: "/Account/CheckEamil",
            type: "post",
            dataType: "json",
            data: params,
        }).done(function (json) {
            if (json.Status == 0) {
                $("#Email").css("background", "Aquamarine");
                $("#email_err").text("");
            } else {
                $("#Email").css("background", "LightPink");
                $("#email_err").text("邮箱已存在，请重试!");
            }
        })
    }

    function Cancel() {
        window.location.href = "/Home/Index";
    }
</script>