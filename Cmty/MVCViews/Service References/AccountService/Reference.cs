//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCViews.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterView", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class RegisterView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniversityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int University {
            get {
                return this.UniversityField;
            }
            set {
                if ((this.UniversityField.Equals(value) != true)) {
                    this.UniversityField = value;
                    this.RaisePropertyChanged("University");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginView", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class LoginView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoView", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class UserInfoView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HobbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniversityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hobby {
            get {
                return this.HobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.HobbyField, value) != true)) {
                    this.HobbyField = value;
                    this.RaisePropertyChanged("Hobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nick {
            get {
                return this.NickField;
            }
            set {
                if ((object.ReferenceEquals(this.NickField, value) != true)) {
                    this.NickField = value;
                    this.RaisePropertyChanged("Nick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string University {
            get {
                return this.UniversityField;
            }
            set {
                if ((object.ReferenceEquals(this.UniversityField, value) != true)) {
                    this.UniversityField = value;
                    this.RaisePropertyChanged("University");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Register", ReplyAction="http://tempuri.org/IAccountService/RegisterResponse")]
        CommonLib.ReturnState Register(MVCViews.AccountService.RegisterView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Register", ReplyAction="http://tempuri.org/IAccountService/RegisterResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> RegisterAsync(MVCViews.AccountService.RegisterView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        CommonLib.ReturnState Login(MVCViews.AccountService.LoginView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> LoginAsync(MVCViews.AccountService.LoginView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetUserInfo", ReplyAction="http://tempuri.org/IAccountService/GetUserInfoResponse")]
        MVCViews.AccountService.UserInfoView GetUserInfo(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetUserInfo", ReplyAction="http://tempuri.org/IAccountService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<MVCViews.AccountService.UserInfoView> GetUserInfoAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateUserInfo", ReplyAction="http://tempuri.org/IAccountService/UpdateUserInfoResponse")]
        CommonLib.ReturnState UpdateUserInfo(MVCViews.AccountService.UserInfoView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateUserInfo", ReplyAction="http://tempuri.org/IAccountService/UpdateUserInfoResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> UpdateUserInfoAsync(MVCViews.AccountService.UserInfoView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AdminLogin", ReplyAction="http://tempuri.org/IAccountService/AdminLoginResponse")]
        CommonLib.ReturnState AdminLogin(MVCViews.AccountService.LoginView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AdminLogin", ReplyAction="http://tempuri.org/IAccountService/AdminLoginResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AdminLoginAsync(MVCViews.AccountService.LoginView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/HasMember", ReplyAction="http://tempuri.org/IAccountService/HasMemberResponse")]
        bool HasMember(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/HasMember", ReplyAction="http://tempuri.org/IAccountService/HasMemberResponse")]
        System.Threading.Tasks.Task<bool> HasMemberAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsEmailValid", ReplyAction="http://tempuri.org/IAccountService/IsEmailValidResponse")]
        bool IsEmailValid(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsEmailValid", ReplyAction="http://tempuri.org/IAccountService/IsEmailValidResponse")]
        System.Threading.Tasks.Task<bool> IsEmailValidAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetEamilStatus", ReplyAction="http://tempuri.org/IAccountService/SetEamilStatusResponse")]
        bool SetEamilStatus(string email, int token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SetEamilStatus", ReplyAction="http://tempuri.org/IAccountService/SetEamilStatusResponse")]
        System.Threading.Tasks.Task<bool> SetEamilStatusAsync(string email, int token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : MVCViews.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<MVCViews.AccountService.IAccountService>, MVCViews.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommonLib.ReturnState Register(MVCViews.AccountService.RegisterView model) {
            return base.Channel.Register(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> RegisterAsync(MVCViews.AccountService.RegisterView model) {
            return base.Channel.RegisterAsync(model);
        }
        
        public CommonLib.ReturnState Login(MVCViews.AccountService.LoginView model) {
            return base.Channel.Login(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> LoginAsync(MVCViews.AccountService.LoginView model) {
            return base.Channel.LoginAsync(model);
        }
        
        public MVCViews.AccountService.UserInfoView GetUserInfo(string email) {
            return base.Channel.GetUserInfo(email);
        }
        
        public System.Threading.Tasks.Task<MVCViews.AccountService.UserInfoView> GetUserInfoAsync(string email) {
            return base.Channel.GetUserInfoAsync(email);
        }
        
        public CommonLib.ReturnState UpdateUserInfo(MVCViews.AccountService.UserInfoView model) {
            return base.Channel.UpdateUserInfo(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> UpdateUserInfoAsync(MVCViews.AccountService.UserInfoView model) {
            return base.Channel.UpdateUserInfoAsync(model);
        }
        
        public CommonLib.ReturnState AdminLogin(MVCViews.AccountService.LoginView model) {
            return base.Channel.AdminLogin(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AdminLoginAsync(MVCViews.AccountService.LoginView model) {
            return base.Channel.AdminLoginAsync(model);
        }
        
        public bool HasMember(string email) {
            return base.Channel.HasMember(email);
        }
        
        public System.Threading.Tasks.Task<bool> HasMemberAsync(string email) {
            return base.Channel.HasMemberAsync(email);
        }
        
        public bool IsEmailValid(string email) {
            return base.Channel.IsEmailValid(email);
        }
        
        public System.Threading.Tasks.Task<bool> IsEmailValidAsync(string email) {
            return base.Channel.IsEmailValidAsync(email);
        }
        
        public bool SetEamilStatus(string email, int token) {
            return base.Channel.SetEamilStatus(email, token);
        }
        
        public System.Threading.Tasks.Task<bool> SetEamilStatusAsync(string email, int token) {
            return base.Channel.SetEamilStatusAsync(email, token);
        }
    }
}
