//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCViews.ForumServiceDebug {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostModel", Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    [System.SerializableAttribute()]
    public partial class PostModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PosterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoComments {
            get {
                return this.NoCommentsField;
            }
            set {
                if ((this.NoCommentsField.Equals(value) != true)) {
                    this.NoCommentsField = value;
                    this.RaisePropertyChanged("NoComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostType {
            get {
                return this.PostTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostTypeField, value) != true)) {
                    this.PostTypeField = value;
                    this.RaisePropertyChanged("PostType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poster {
            get {
                return this.PosterField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterField, value) != true)) {
                    this.PosterField = value;
                    this.RaisePropertyChanged("Poster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostReplyModel", Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    [System.SerializableAttribute()]
    public partial class PostReplyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ResponseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ResponseDate {
            get {
                return this.ResponseDateField;
            }
            set {
                if ((this.ResponseDateField.Equals(value) != true)) {
                    this.ResponseDateField = value;
                    this.RaisePropertyChanged("ResponseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseTo {
            get {
                return this.ResponseToField;
            }
            set {
                if ((this.ResponseToField.Equals(value) != true)) {
                    this.ResponseToField = value;
                    this.RaisePropertyChanged("ResponseTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Responser {
            get {
                return this.ResponserField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponserField, value) != true)) {
                    this.ResponserField = value;
                    this.RaisePropertyChanged("Responser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ForumServiceDebug.IForumService")]
    public interface IForumService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddPost", ReplyAction="http://tempuri.org/IForumService/AddPostResponse")]
        CommonLib.ReturnState AddPost(MVCViews.ForumServiceDebug.PostModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddPost", ReplyAction="http://tempuri.org/IForumService/AddPostResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AddPostAsync(MVCViews.ForumServiceDebug.PostModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/DelPost", ReplyAction="http://tempuri.org/IForumService/DelPostResponse")]
        CommonLib.ReturnState DelPost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/DelPost", ReplyAction="http://tempuri.org/IForumService/DelPostResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> DelPostAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostList", ReplyAction="http://tempuri.org/IForumService/GetPostListResponse")]
        MVCViews.ForumServiceDebug.PostModel[] GetPostList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostList", ReplyAction="http://tempuri.org/IForumService/GetPostListResponse")]
        System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostModel[]> GetPostListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostListByPoster", ReplyAction="http://tempuri.org/IForumService/GetPostListByPosterResponse")]
        MVCViews.ForumServiceDebug.PostModel[] GetPostListByPoster(string poster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostListByPoster", ReplyAction="http://tempuri.org/IForumService/GetPostListByPosterResponse")]
        System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostModel[]> GetPostListByPosterAsync(string poster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostById", ReplyAction="http://tempuri.org/IForumService/GetPostByIdResponse")]
        MVCViews.ForumServiceDebug.PostModel GetPostById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostById", ReplyAction="http://tempuri.org/IForumService/GetPostByIdResponse")]
        System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostModel> GetPostByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostReplyById", ReplyAction="http://tempuri.org/IForumService/GetPostReplyByIdResponse")]
        MVCViews.ForumServiceDebug.PostReplyModel GetPostReplyById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostReplyById", ReplyAction="http://tempuri.org/IForumService/GetPostReplyByIdResponse")]
        System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostReplyModel> GetPostReplyByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/UpdatePost", ReplyAction="http://tempuri.org/IForumService/UpdatePostResponse")]
        CommonLib.ReturnState UpdatePost(MVCViews.ForumServiceDebug.PostModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/UpdatePost", ReplyAction="http://tempuri.org/IForumService/UpdatePostResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> UpdatePostAsync(MVCViews.ForumServiceDebug.PostModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostReplyListByPostId", ReplyAction="http://tempuri.org/IForumService/GetPostReplyListByPostIdResponse")]
        MVCViews.ForumServiceDebug.PostReplyModel[] GetPostReplyListByPostId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostReplyListByPostId", ReplyAction="http://tempuri.org/IForumService/GetPostReplyListByPostIdResponse")]
        System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostReplyModel[]> GetPostReplyListByPostIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddResponseToPost", ReplyAction="http://tempuri.org/IForumService/AddResponseToPostResponse")]
        CommonLib.ReturnState AddResponseToPost(MVCViews.ForumServiceDebug.PostReplyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddResponseToPost", ReplyAction="http://tempuri.org/IForumService/AddResponseToPostResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AddResponseToPostAsync(MVCViews.ForumServiceDebug.PostReplyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/DelResponseToPostById", ReplyAction="http://tempuri.org/IForumService/DelResponseToPostByIdResponse")]
        CommonLib.ReturnState DelResponseToPostById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/DelResponseToPostById", ReplyAction="http://tempuri.org/IForumService/DelResponseToPostByIdResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> DelResponseToPostByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetReplyResponseListByPostId", ReplyAction="http://tempuri.org/IForumService/GetReplyResponseListByPostIdResponse")]
        MVCViews.ForumServiceDebug.PostReplyModel[] GetReplyResponseListByPostId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetReplyResponseListByPostId", ReplyAction="http://tempuri.org/IForumService/GetReplyResponseListByPostIdResponse")]
        System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostReplyModel[]> GetReplyResponseListByPostIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddResponseToPostReply", ReplyAction="http://tempuri.org/IForumService/AddResponseToPostReplyResponse")]
        CommonLib.ReturnState AddResponseToPostReply(MVCViews.ForumServiceDebug.PostReplyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddResponseToPostReply", ReplyAction="http://tempuri.org/IForumService/AddResponseToPostReplyResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AddResponseToPostReplyAsync(MVCViews.ForumServiceDebug.PostReplyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/DelResponseToPostReplyById", ReplyAction="http://tempuri.org/IForumService/DelResponseToPostReplyByIdResponse")]
        CommonLib.ReturnState DelResponseToPostReplyById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/DelResponseToPostReplyById", ReplyAction="http://tempuri.org/IForumService/DelResponseToPostReplyByIdResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> DelResponseToPostReplyByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostTypeList", ReplyAction="http://tempuri.org/IForumService/GetPostTypeListResponse")]
        string[] GetPostTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPostTypeList", ReplyAction="http://tempuri.org/IForumService/GetPostTypeListResponse")]
        System.Threading.Tasks.Task<string[]> GetPostTypeListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForumServiceChannel : MVCViews.ForumServiceDebug.IForumService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForumServiceClient : System.ServiceModel.ClientBase<MVCViews.ForumServiceDebug.IForumService>, MVCViews.ForumServiceDebug.IForumService {
        
        public ForumServiceClient() {
        }
        
        public ForumServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ForumServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ForumServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ForumServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommonLib.ReturnState AddPost(MVCViews.ForumServiceDebug.PostModel model) {
            return base.Channel.AddPost(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AddPostAsync(MVCViews.ForumServiceDebug.PostModel model) {
            return base.Channel.AddPostAsync(model);
        }
        
        public CommonLib.ReturnState DelPost(int id) {
            return base.Channel.DelPost(id);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> DelPostAsync(int id) {
            return base.Channel.DelPostAsync(id);
        }
        
        public MVCViews.ForumServiceDebug.PostModel[] GetPostList() {
            return base.Channel.GetPostList();
        }
        
        public System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostModel[]> GetPostListAsync() {
            return base.Channel.GetPostListAsync();
        }
        
        public MVCViews.ForumServiceDebug.PostModel[] GetPostListByPoster(string poster) {
            return base.Channel.GetPostListByPoster(poster);
        }
        
        public System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostModel[]> GetPostListByPosterAsync(string poster) {
            return base.Channel.GetPostListByPosterAsync(poster);
        }
        
        public MVCViews.ForumServiceDebug.PostModel GetPostById(int id) {
            return base.Channel.GetPostById(id);
        }
        
        public System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostModel> GetPostByIdAsync(int id) {
            return base.Channel.GetPostByIdAsync(id);
        }
        
        public MVCViews.ForumServiceDebug.PostReplyModel GetPostReplyById(int id) {
            return base.Channel.GetPostReplyById(id);
        }
        
        public System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostReplyModel> GetPostReplyByIdAsync(int id) {
            return base.Channel.GetPostReplyByIdAsync(id);
        }
        
        public CommonLib.ReturnState UpdatePost(MVCViews.ForumServiceDebug.PostModel model) {
            return base.Channel.UpdatePost(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> UpdatePostAsync(MVCViews.ForumServiceDebug.PostModel model) {
            return base.Channel.UpdatePostAsync(model);
        }
        
        public MVCViews.ForumServiceDebug.PostReplyModel[] GetPostReplyListByPostId(int id) {
            return base.Channel.GetPostReplyListByPostId(id);
        }
        
        public System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostReplyModel[]> GetPostReplyListByPostIdAsync(int id) {
            return base.Channel.GetPostReplyListByPostIdAsync(id);
        }
        
        public CommonLib.ReturnState AddResponseToPost(MVCViews.ForumServiceDebug.PostReplyModel model) {
            return base.Channel.AddResponseToPost(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AddResponseToPostAsync(MVCViews.ForumServiceDebug.PostReplyModel model) {
            return base.Channel.AddResponseToPostAsync(model);
        }
        
        public CommonLib.ReturnState DelResponseToPostById(int id) {
            return base.Channel.DelResponseToPostById(id);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> DelResponseToPostByIdAsync(int id) {
            return base.Channel.DelResponseToPostByIdAsync(id);
        }
        
        public MVCViews.ForumServiceDebug.PostReplyModel[] GetReplyResponseListByPostId(int id) {
            return base.Channel.GetReplyResponseListByPostId(id);
        }
        
        public System.Threading.Tasks.Task<MVCViews.ForumServiceDebug.PostReplyModel[]> GetReplyResponseListByPostIdAsync(int id) {
            return base.Channel.GetReplyResponseListByPostIdAsync(id);
        }
        
        public CommonLib.ReturnState AddResponseToPostReply(MVCViews.ForumServiceDebug.PostReplyModel model) {
            return base.Channel.AddResponseToPostReply(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AddResponseToPostReplyAsync(MVCViews.ForumServiceDebug.PostReplyModel model) {
            return base.Channel.AddResponseToPostReplyAsync(model);
        }
        
        public CommonLib.ReturnState DelResponseToPostReplyById(int id) {
            return base.Channel.DelResponseToPostReplyById(id);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> DelResponseToPostReplyByIdAsync(int id) {
            return base.Channel.DelResponseToPostReplyByIdAsync(id);
        }
        
        public string[] GetPostTypeList() {
            return base.Channel.GetPostTypeList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetPostTypeListAsync() {
            return base.Channel.GetPostTypeListAsync();
        }
    }
}
