//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCViews.CourseCommentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseCommentView", Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    [System.SerializableAttribute()]
    public partial class CourseCommentView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PubDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PubDate {
            get {
                return this.PubDateField;
            }
            set {
                if ((this.PubDateField.Equals(value) != true)) {
                    this.PubDateField = value;
                    this.RaisePropertyChanged("PubDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseCommentService.ICourseCommentService")]
    public interface ICourseCommentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseCommentService/AddComment", ReplyAction="http://tempuri.org/ICourseCommentService/AddCommentResponse")]
        CommonLib.ReturnState AddComment(MVCViews.CourseCommentService.CourseCommentView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseCommentService/AddComment", ReplyAction="http://tempuri.org/ICourseCommentService/AddCommentResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AddCommentAsync(MVCViews.CourseCommentService.CourseCommentView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseCommentService/RemoveComment", ReplyAction="http://tempuri.org/ICourseCommentService/RemoveCommentResponse")]
        CommonLib.ReturnState RemoveComment(MVCViews.CourseCommentService.CourseCommentView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseCommentService/RemoveComment", ReplyAction="http://tempuri.org/ICourseCommentService/RemoveCommentResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> RemoveCommentAsync(MVCViews.CourseCommentService.CourseCommentView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseCommentService/GetCommentByCode", ReplyAction="http://tempuri.org/ICourseCommentService/GetCommentByCodeResponse")]
        MVCViews.CourseCommentService.CourseCommentView[] GetCommentByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseCommentService/GetCommentByCode", ReplyAction="http://tempuri.org/ICourseCommentService/GetCommentByCodeResponse")]
        System.Threading.Tasks.Task<MVCViews.CourseCommentService.CourseCommentView[]> GetCommentByCodeAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseCommentServiceChannel : MVCViews.CourseCommentService.ICourseCommentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseCommentServiceClient : System.ServiceModel.ClientBase<MVCViews.CourseCommentService.ICourseCommentService>, MVCViews.CourseCommentService.ICourseCommentService {
        
        public CourseCommentServiceClient() {
        }
        
        public CourseCommentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseCommentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseCommentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseCommentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommonLib.ReturnState AddComment(MVCViews.CourseCommentService.CourseCommentView model) {
            return base.Channel.AddComment(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AddCommentAsync(MVCViews.CourseCommentService.CourseCommentView model) {
            return base.Channel.AddCommentAsync(model);
        }
        
        public CommonLib.ReturnState RemoveComment(MVCViews.CourseCommentService.CourseCommentView model) {
            return base.Channel.RemoveComment(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> RemoveCommentAsync(MVCViews.CourseCommentService.CourseCommentView model) {
            return base.Channel.RemoveCommentAsync(model);
        }
        
        public MVCViews.CourseCommentService.CourseCommentView[] GetCommentByCode(string code) {
            return base.Channel.GetCommentByCode(code);
        }
        
        public System.Threading.Tasks.Task<MVCViews.CourseCommentService.CourseCommentView[]> GetCommentByCodeAsync(string code) {
            return base.Channel.GetCommentByCodeAsync(code);
        }
    }
}
