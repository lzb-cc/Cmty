//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace MVCViews.AccountService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IAccountService", Namespace="http://tempuri.org/")]
    public partial class AccountService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEmailValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEamilStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailCheckStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReValidEmailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountService() {
            this.Url = global::MVCViews.Properties.Settings.Default.MVCViews_AccountService_AccountService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        public event AdminLoginCompletedEventHandler AdminLoginCompleted;
        
        /// <remarks/>
        public event HasMemberCompletedEventHandler HasMemberCompleted;
        
        /// <remarks/>
        public event IsEmailValidCompletedEventHandler IsEmailValidCompleted;
        
        /// <remarks/>
        public event SetEamilStatusCompletedEventHandler SetEamilStatusCompleted;
        
        /// <remarks/>
        public event GetEmailCheckStatusCompletedEventHandler GetEmailCheckStatusCompleted;
        
        /// <remarks/>
        public event ReValidEmailCompletedEventHandler ReValidEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Register([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] RegisterView model, out ReturnState RegisterResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool RegisterResultSpecified) {
            object[] results = this.Invoke("Register", new object[] {
                        model});
            RegisterResult = ((ReturnState)(results[0]));
            RegisterResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void RegisterAsync(RegisterView model) {
            this.RegisterAsync(model, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(RegisterView model, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        model}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LoginView model, out ReturnState LoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool LoginResultSpecified) {
            object[] results = this.Invoke("Login", new object[] {
                        model});
            LoginResult = ((ReturnState)(results[0]));
            LoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void LoginAsync(LoginView model) {
            this.LoginAsync(model, null);
        }
        
        /// <remarks/>
        public void LoginAsync(LoginView model, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        model}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/GetUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UserInfoView GetUserInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        email});
            return ((UserInfoView)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string email) {
            this.GetUserInfoAsync(email, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string email, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        email}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/UpdateUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserInfoView model, out ReturnState UpdateUserInfoResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateUserInfoResultSpecified) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        model});
            UpdateUserInfoResult = ((ReturnState)(results[0]));
            UpdateUserInfoResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(UserInfoView model) {
            this.UpdateUserInfoAsync(model, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(UserInfoView model, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        model}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/AdminLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LoginView model, out ReturnState AdminLoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AdminLoginResultSpecified) {
            object[] results = this.Invoke("AdminLogin", new object[] {
                        model});
            AdminLoginResult = ((ReturnState)(results[0]));
            AdminLoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AdminLoginAsync(LoginView model) {
            this.AdminLoginAsync(model, null);
        }
        
        /// <remarks/>
        public void AdminLoginAsync(LoginView model, object userState) {
            if ((this.AdminLoginOperationCompleted == null)) {
                this.AdminLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminLoginOperationCompleted);
            }
            this.InvokeAsync("AdminLogin", new object[] {
                        model}, this.AdminLoginOperationCompleted, userState);
        }
        
        private void OnAdminLoginOperationCompleted(object arg) {
            if ((this.AdminLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminLoginCompleted(this, new AdminLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/HasMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HasMember([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, out bool HasMemberResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool HasMemberResultSpecified) {
            object[] results = this.Invoke("HasMember", new object[] {
                        email});
            HasMemberResult = ((bool)(results[0]));
            HasMemberResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void HasMemberAsync(string email) {
            this.HasMemberAsync(email, null);
        }
        
        /// <remarks/>
        public void HasMemberAsync(string email, object userState) {
            if ((this.HasMemberOperationCompleted == null)) {
                this.HasMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasMemberOperationCompleted);
            }
            this.InvokeAsync("HasMember", new object[] {
                        email}, this.HasMemberOperationCompleted, userState);
        }
        
        private void OnHasMemberOperationCompleted(object arg) {
            if ((this.HasMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasMemberCompleted(this, new HasMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/IsEmailValid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsEmailValid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, out bool IsEmailValidResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IsEmailValidResultSpecified) {
            object[] results = this.Invoke("IsEmailValid", new object[] {
                        email});
            IsEmailValidResult = ((bool)(results[0]));
            IsEmailValidResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void IsEmailValidAsync(string email) {
            this.IsEmailValidAsync(email, null);
        }
        
        /// <remarks/>
        public void IsEmailValidAsync(string email, object userState) {
            if ((this.IsEmailValidOperationCompleted == null)) {
                this.IsEmailValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEmailValidOperationCompleted);
            }
            this.InvokeAsync("IsEmailValid", new object[] {
                        email}, this.IsEmailValidOperationCompleted, userState);
        }
        
        private void OnIsEmailValidOperationCompleted(object arg) {
            if ((this.IsEmailValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEmailValidCompleted(this, new IsEmailValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/SetEamilStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEamilStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, int token, [System.Xml.Serialization.XmlIgnoreAttribute()] bool tokenSpecified, out bool SetEamilStatusResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SetEamilStatusResultSpecified) {
            object[] results = this.Invoke("SetEamilStatus", new object[] {
                        email,
                        token,
                        tokenSpecified});
            SetEamilStatusResult = ((bool)(results[0]));
            SetEamilStatusResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SetEamilStatusAsync(string email, int token, bool tokenSpecified) {
            this.SetEamilStatusAsync(email, token, tokenSpecified, null);
        }
        
        /// <remarks/>
        public void SetEamilStatusAsync(string email, int token, bool tokenSpecified, object userState) {
            if ((this.SetEamilStatusOperationCompleted == null)) {
                this.SetEamilStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEamilStatusOperationCompleted);
            }
            this.InvokeAsync("SetEamilStatus", new object[] {
                        email,
                        token,
                        tokenSpecified}, this.SetEamilStatusOperationCompleted, userState);
        }
        
        private void OnSetEamilStatusOperationCompleted(object arg) {
            if ((this.SetEamilStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEamilStatusCompleted(this, new SetEamilStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/GetEmailCheckStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetEmailCheckStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, out int GetEmailCheckStatusResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetEmailCheckStatusResultSpecified) {
            object[] results = this.Invoke("GetEmailCheckStatus", new object[] {
                        email});
            GetEmailCheckStatusResult = ((int)(results[0]));
            GetEmailCheckStatusResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetEmailCheckStatusAsync(string email) {
            this.GetEmailCheckStatusAsync(email, null);
        }
        
        /// <remarks/>
        public void GetEmailCheckStatusAsync(string email, object userState) {
            if ((this.GetEmailCheckStatusOperationCompleted == null)) {
                this.GetEmailCheckStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailCheckStatusOperationCompleted);
            }
            this.InvokeAsync("GetEmailCheckStatus", new object[] {
                        email}, this.GetEmailCheckStatusOperationCompleted, userState);
        }
        
        private void OnGetEmailCheckStatusOperationCompleted(object arg) {
            if ((this.GetEmailCheckStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailCheckStatusCompleted(this, new GetEmailCheckStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountService/ReValidEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReValidEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            this.Invoke("ReValidEmail", new object[] {
                        email});
        }
        
        /// <remarks/>
        public void ReValidEmailAsync(string email) {
            this.ReValidEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void ReValidEmailAsync(string email, object userState) {
            if ((this.ReValidEmailOperationCompleted == null)) {
                this.ReValidEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReValidEmailOperationCompleted);
            }
            this.InvokeAsync("ReValidEmail", new object[] {
                        email}, this.ReValidEmailOperationCompleted, userState);
        }
        
        private void OnReValidEmailOperationCompleted(object arg) {
            if ((this.ReValidEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReValidEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public partial class RegisterView {
        
        private string emailField;
        
        private string passwordField;
        
        private string telField;
        
        private int universityField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tel {
            get {
                return this.telField;
            }
            set {
                this.telField = value;
            }
        }
        
        /// <remarks/>
        public int University {
            get {
                return this.universityField;
            }
            set {
                this.universityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public partial class UserInfoView {
        
        private string avatarField;
        
        private string emailField;
        
        private string hobbyField;
        
        private string nickField;
        
        private string sexField;
        
        private string telField;
        
        private string universityField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Hobby {
            get {
                return this.hobbyField;
            }
            set {
                this.hobbyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Nick {
            get {
                return this.nickField;
            }
            set {
                this.nickField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tel {
            get {
                return this.telField;
            }
            set {
                this.telField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string University {
            get {
                return this.universityField;
            }
            set {
                this.universityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public partial class LoginView {
        
        private string emailField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum ReturnState {
        
        /// <remarks/>
        ReturnOK,
        
        /// <remarks/>
        ReturnError,
        
        /// <remarks/>
        SystemError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState RegisterResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool RegisterResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState LoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool LoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfoView Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfoView)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState UpdateUserInfoResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateUserInfoResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AdminLoginCompletedEventHandler(object sender, AdminLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdminLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdminLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState AdminLoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AdminLoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HasMemberCompletedEventHandler(object sender, HasMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool HasMemberResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool HasMemberResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsEmailValidCompletedEventHandler(object sender, IsEmailValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEmailValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEmailValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool IsEmailValidResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IsEmailValidResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SetEamilStatusCompletedEventHandler(object sender, SetEamilStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEamilStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEamilStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool SetEamilStatusResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool SetEamilStatusResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetEmailCheckStatusCompletedEventHandler(object sender, GetEmailCheckStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailCheckStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailCheckStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetEmailCheckStatusResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetEmailCheckStatusResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReValidEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591