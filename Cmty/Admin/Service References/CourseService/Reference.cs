//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Admin.CourseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseView", Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    [System.SerializableAttribute()]
    public partial class CourseView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DespField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniversityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desp {
            get {
                return this.DespField;
            }
            set {
                if ((object.ReferenceEquals(this.DespField, value) != true)) {
                    this.DespField = value;
                    this.RaisePropertyChanged("Desp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicUrl {
            get {
                return this.PicUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PicUrlField, value) != true)) {
                    this.PicUrlField = value;
                    this.RaisePropertyChanged("PicUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int University {
            get {
                return this.UniversityField;
            }
            set {
                if ((this.UniversityField.Equals(value) != true)) {
                    this.UniversityField = value;
                    this.RaisePropertyChanged("University");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserApply", Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    [System.SerializableAttribute()]
    public partial class UserApply : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CommitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CommitDate {
            get {
                return this.CommitDateField;
            }
            set {
                if ((this.CommitDateField.Equals(value) != true)) {
                    this.CommitDateField = value;
                    this.RaisePropertyChanged("CommitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseReviewView", Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    [System.SerializableAttribute()]
    public partial class CourseReviewView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CommitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DespField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniversityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CommitDate {
            get {
                return this.CommitDateField;
            }
            set {
                if ((this.CommitDateField.Equals(value) != true)) {
                    this.CommitDateField = value;
                    this.RaisePropertyChanged("CommitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desp {
            get {
                return this.DespField;
            }
            set {
                if ((object.ReferenceEquals(this.DespField, value) != true)) {
                    this.DespField = value;
                    this.RaisePropertyChanged("Desp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicUrl {
            get {
                return this.PicUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PicUrlField, value) != true)) {
                    this.PicUrlField = value;
                    this.RaisePropertyChanged("PicUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string University {
            get {
                return this.UniversityField;
            }
            set {
                if ((object.ReferenceEquals(this.UniversityField, value) != true)) {
                    this.UniversityField = value;
                    this.RaisePropertyChanged("University");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseService.ICourseService")]
    public interface ICourseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/AddCourse", ReplyAction="http://tempuri.org/ICourseService/AddCourseResponse")]
        CommonLib.ReturnState AddCourse(Admin.CourseService.CourseView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/AddCourse", ReplyAction="http://tempuri.org/ICourseService/AddCourseResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AddCourseAsync(Admin.CourseService.CourseView model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseByPage", ReplyAction="http://tempuri.org/ICourseService/GetCourseByPageResponse")]
        Admin.CourseService.CourseView[] GetCourseByPage(int page, int nPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseByPage", ReplyAction="http://tempuri.org/ICourseService/GetCourseByPageResponse")]
        System.Threading.Tasks.Task<Admin.CourseService.CourseView[]> GetCourseByPageAsync(int page, int nPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/AddCourseApply", ReplyAction="http://tempuri.org/ICourseService/AddCourseApplyResponse")]
        CommonLib.ReturnState AddCourseApply(Admin.CourseService.CourseView model, Admin.CourseService.UserApply user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/AddCourseApply", ReplyAction="http://tempuri.org/ICourseService/AddCourseApplyResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> AddCourseApplyAsync(Admin.CourseService.CourseView model, Admin.CourseService.UserApply user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/HasMember", ReplyAction="http://tempuri.org/ICourseService/HasMemberResponse")]
        bool HasMember(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/HasMember", ReplyAction="http://tempuri.org/ICourseService/HasMemberResponse")]
        System.Threading.Tasks.Task<bool> HasMemberAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseReviewViewByEmail", ReplyAction="http://tempuri.org/ICourseService/GetCourseReviewViewByEmailResponse")]
        Admin.CourseService.CourseReviewView[] GetCourseReviewViewByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseReviewViewByEmail", ReplyAction="http://tempuri.org/ICourseService/GetCourseReviewViewByEmailResponse")]
        System.Threading.Tasks.Task<Admin.CourseService.CourseReviewView[]> GetCourseReviewViewByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseReviews", ReplyAction="http://tempuri.org/ICourseService/GetCourseReviewsResponse")]
        Admin.CourseService.CourseReviewView[] GetCourseReviews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseReviews", ReplyAction="http://tempuri.org/ICourseService/GetCourseReviewsResponse")]
        System.Threading.Tasks.Task<Admin.CourseService.CourseReviewView[]> GetCourseReviewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/ReviewPass", ReplyAction="http://tempuri.org/ICourseService/ReviewPassResponse")]
        CommonLib.ReturnState ReviewPass(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/ReviewPass", ReplyAction="http://tempuri.org/ICourseService/ReviewPassResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> ReviewPassAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/ReviewFailed", ReplyAction="http://tempuri.org/ICourseService/ReviewFailedResponse")]
        CommonLib.ReturnState ReviewFailed(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/ReviewFailed", ReplyAction="http://tempuri.org/ICourseService/ReviewFailedResponse")]
        System.Threading.Tasks.Task<CommonLib.ReturnState> ReviewFailedAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseByCode", ReplyAction="http://tempuri.org/ICourseService/GetCourseByCodeResponse")]
        Admin.CourseService.CourseView GetCourseByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseByCode", ReplyAction="http://tempuri.org/ICourseService/GetCourseByCodeResponse")]
        System.Threading.Tasks.Task<Admin.CourseService.CourseView> GetCourseByCodeAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseServiceChannel : Admin.CourseService.ICourseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseServiceClient : System.ServiceModel.ClientBase<Admin.CourseService.ICourseService>, Admin.CourseService.ICourseService {
        
        public CourseServiceClient() {
        }
        
        public CourseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommonLib.ReturnState AddCourse(Admin.CourseService.CourseView model) {
            return base.Channel.AddCourse(model);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AddCourseAsync(Admin.CourseService.CourseView model) {
            return base.Channel.AddCourseAsync(model);
        }
        
        public Admin.CourseService.CourseView[] GetCourseByPage(int page, int nPage) {
            return base.Channel.GetCourseByPage(page, nPage);
        }
        
        public System.Threading.Tasks.Task<Admin.CourseService.CourseView[]> GetCourseByPageAsync(int page, int nPage) {
            return base.Channel.GetCourseByPageAsync(page, nPage);
        }
        
        public CommonLib.ReturnState AddCourseApply(Admin.CourseService.CourseView model, Admin.CourseService.UserApply user) {
            return base.Channel.AddCourseApply(model, user);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> AddCourseApplyAsync(Admin.CourseService.CourseView model, Admin.CourseService.UserApply user) {
            return base.Channel.AddCourseApplyAsync(model, user);
        }
        
        public bool HasMember(string code) {
            return base.Channel.HasMember(code);
        }
        
        public System.Threading.Tasks.Task<bool> HasMemberAsync(string code) {
            return base.Channel.HasMemberAsync(code);
        }
        
        public Admin.CourseService.CourseReviewView[] GetCourseReviewViewByEmail(string email) {
            return base.Channel.GetCourseReviewViewByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Admin.CourseService.CourseReviewView[]> GetCourseReviewViewByEmailAsync(string email) {
            return base.Channel.GetCourseReviewViewByEmailAsync(email);
        }
        
        public Admin.CourseService.CourseReviewView[] GetCourseReviews() {
            return base.Channel.GetCourseReviews();
        }
        
        public System.Threading.Tasks.Task<Admin.CourseService.CourseReviewView[]> GetCourseReviewsAsync() {
            return base.Channel.GetCourseReviewsAsync();
        }
        
        public CommonLib.ReturnState ReviewPass(string code) {
            return base.Channel.ReviewPass(code);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> ReviewPassAsync(string code) {
            return base.Channel.ReviewPassAsync(code);
        }
        
        public CommonLib.ReturnState ReviewFailed(string code) {
            return base.Channel.ReviewFailed(code);
        }
        
        public System.Threading.Tasks.Task<CommonLib.ReturnState> ReviewFailedAsync(string code) {
            return base.Channel.ReviewFailedAsync(code);
        }
        
        public Admin.CourseService.CourseView GetCourseByCode(string code) {
            return base.Channel.GetCourseByCode(code);
        }
        
        public System.Threading.Tasks.Task<Admin.CourseService.CourseView> GetCourseByCodeAsync(string code) {
            return base.Channel.GetCourseByCodeAsync(code);
        }
    }
}
