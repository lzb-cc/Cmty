//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Admin.UtilityService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IUtilityService", Namespace="http://tempuri.org/")]
    public partial class UtilityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IndexOfUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameOfUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndexOfJobTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameOfJobTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeacherCourseMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTeacherCourseMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourseIdByTeacherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeacherByCourseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameOfCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUniversityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilterLisstOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFilterStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFilterStringOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UtilityService() {
            this.Url = global::Admin.Properties.Settings.Default.Admin_UtilityService_UtilityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IndexOfUniversityCompletedEventHandler IndexOfUniversityCompleted;
        
        /// <remarks/>
        public event NameOfUniversityCompletedEventHandler NameOfUniversityCompleted;
        
        /// <remarks/>
        public event IndexOfJobTitleCompletedEventHandler IndexOfJobTitleCompleted;
        
        /// <remarks/>
        public event NameOfJobTitleCompletedEventHandler NameOfJobTitleCompleted;
        
        /// <remarks/>
        public event AddTeacherCourseMapCompletedEventHandler AddTeacherCourseMapCompleted;
        
        /// <remarks/>
        public event DelTeacherCourseMapCompletedEventHandler DelTeacherCourseMapCompleted;
        
        /// <remarks/>
        public event GetCourseIdByTeacherCompletedEventHandler GetCourseIdByTeacherCompleted;
        
        /// <remarks/>
        public event GetTeacherByCourseIdCompletedEventHandler GetTeacherByCourseIdCompleted;
        
        /// <remarks/>
        public event NameOfCourseCompletedEventHandler NameOfCourseCompleted;
        
        /// <remarks/>
        public event GetUniversityListCompletedEventHandler GetUniversityListCompleted;
        
        /// <remarks/>
        public event GetFilterLisstCompletedEventHandler GetFilterLisstCompleted;
        
        /// <remarks/>
        public event AddFilterStringCompletedEventHandler AddFilterStringCompleted;
        
        /// <remarks/>
        public event RemoveFilterStringCompletedEventHandler RemoveFilterStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/IndexOfUniversity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IndexOfUniversity([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string university, out int IndexOfUniversityResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IndexOfUniversityResultSpecified) {
            object[] results = this.Invoke("IndexOfUniversity", new object[] {
                        university});
            IndexOfUniversityResult = ((int)(results[0]));
            IndexOfUniversityResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void IndexOfUniversityAsync(string university) {
            this.IndexOfUniversityAsync(university, null);
        }
        
        /// <remarks/>
        public void IndexOfUniversityAsync(string university, object userState) {
            if ((this.IndexOfUniversityOperationCompleted == null)) {
                this.IndexOfUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndexOfUniversityOperationCompleted);
            }
            this.InvokeAsync("IndexOfUniversity", new object[] {
                        university}, this.IndexOfUniversityOperationCompleted, userState);
        }
        
        private void OnIndexOfUniversityOperationCompleted(object arg) {
            if ((this.IndexOfUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndexOfUniversityCompleted(this, new IndexOfUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/NameOfUniversity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NameOfUniversity(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("NameOfUniversity", new object[] {
                        id,
                        idSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NameOfUniversityAsync(int id, bool idSpecified) {
            this.NameOfUniversityAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void NameOfUniversityAsync(int id, bool idSpecified, object userState) {
            if ((this.NameOfUniversityOperationCompleted == null)) {
                this.NameOfUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameOfUniversityOperationCompleted);
            }
            this.InvokeAsync("NameOfUniversity", new object[] {
                        id,
                        idSpecified}, this.NameOfUniversityOperationCompleted, userState);
        }
        
        private void OnNameOfUniversityOperationCompleted(object arg) {
            if ((this.NameOfUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameOfUniversityCompleted(this, new NameOfUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/IndexOfJobTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IndexOfJobTitle([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, out int IndexOfJobTitleResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IndexOfJobTitleResultSpecified) {
            object[] results = this.Invoke("IndexOfJobTitle", new object[] {
                        name});
            IndexOfJobTitleResult = ((int)(results[0]));
            IndexOfJobTitleResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void IndexOfJobTitleAsync(string name) {
            this.IndexOfJobTitleAsync(name, null);
        }
        
        /// <remarks/>
        public void IndexOfJobTitleAsync(string name, object userState) {
            if ((this.IndexOfJobTitleOperationCompleted == null)) {
                this.IndexOfJobTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndexOfJobTitleOperationCompleted);
            }
            this.InvokeAsync("IndexOfJobTitle", new object[] {
                        name}, this.IndexOfJobTitleOperationCompleted, userState);
        }
        
        private void OnIndexOfJobTitleOperationCompleted(object arg) {
            if ((this.IndexOfJobTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndexOfJobTitleCompleted(this, new IndexOfJobTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/NameOfJobTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NameOfJobTitle(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("NameOfJobTitle", new object[] {
                        id,
                        idSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NameOfJobTitleAsync(int id, bool idSpecified) {
            this.NameOfJobTitleAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void NameOfJobTitleAsync(int id, bool idSpecified, object userState) {
            if ((this.NameOfJobTitleOperationCompleted == null)) {
                this.NameOfJobTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameOfJobTitleOperationCompleted);
            }
            this.InvokeAsync("NameOfJobTitle", new object[] {
                        id,
                        idSpecified}, this.NameOfJobTitleOperationCompleted, userState);
        }
        
        private void OnNameOfJobTitleOperationCompleted(object arg) {
            if ((this.NameOfJobTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameOfJobTitleCompleted(this, new NameOfJobTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/AddTeacherCourseMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTeacherCourseMap([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, out bool AddTeacherCourseMapResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddTeacherCourseMapResultSpecified) {
            object[] results = this.Invoke("AddTeacherCourseMap", new object[] {
                        email,
                        code});
            AddTeacherCourseMapResult = ((bool)(results[0]));
            AddTeacherCourseMapResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddTeacherCourseMapAsync(string email, string code) {
            this.AddTeacherCourseMapAsync(email, code, null);
        }
        
        /// <remarks/>
        public void AddTeacherCourseMapAsync(string email, string code, object userState) {
            if ((this.AddTeacherCourseMapOperationCompleted == null)) {
                this.AddTeacherCourseMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeacherCourseMapOperationCompleted);
            }
            this.InvokeAsync("AddTeacherCourseMap", new object[] {
                        email,
                        code}, this.AddTeacherCourseMapOperationCompleted, userState);
        }
        
        private void OnAddTeacherCourseMapOperationCompleted(object arg) {
            if ((this.AddTeacherCourseMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeacherCourseMapCompleted(this, new AddTeacherCourseMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/DelTeacherCourseMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelTeacherCourseMap([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, out bool DelTeacherCourseMapResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DelTeacherCourseMapResultSpecified) {
            object[] results = this.Invoke("DelTeacherCourseMap", new object[] {
                        email,
                        code});
            DelTeacherCourseMapResult = ((bool)(results[0]));
            DelTeacherCourseMapResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DelTeacherCourseMapAsync(string email, string code) {
            this.DelTeacherCourseMapAsync(email, code, null);
        }
        
        /// <remarks/>
        public void DelTeacherCourseMapAsync(string email, string code, object userState) {
            if ((this.DelTeacherCourseMapOperationCompleted == null)) {
                this.DelTeacherCourseMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTeacherCourseMapOperationCompleted);
            }
            this.InvokeAsync("DelTeacherCourseMap", new object[] {
                        email,
                        code}, this.DelTeacherCourseMapOperationCompleted, userState);
        }
        
        private void OnDelTeacherCourseMapOperationCompleted(object arg) {
            if ((this.DelTeacherCourseMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTeacherCourseMapCompleted(this, new DelTeacherCourseMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetCourseIdByTeacher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetCourseIdByTeacher([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            object[] results = this.Invoke("GetCourseIdByTeacher", new object[] {
                        email});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCourseIdByTeacherAsync(string email) {
            this.GetCourseIdByTeacherAsync(email, null);
        }
        
        /// <remarks/>
        public void GetCourseIdByTeacherAsync(string email, object userState) {
            if ((this.GetCourseIdByTeacherOperationCompleted == null)) {
                this.GetCourseIdByTeacherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourseIdByTeacherOperationCompleted);
            }
            this.InvokeAsync("GetCourseIdByTeacher", new object[] {
                        email}, this.GetCourseIdByTeacherOperationCompleted, userState);
        }
        
        private void OnGetCourseIdByTeacherOperationCompleted(object arg) {
            if ((this.GetCourseIdByTeacherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourseIdByTeacherCompleted(this, new GetCourseIdByTeacherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetTeacherByCourseId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetTeacherByCourseId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code) {
            object[] results = this.Invoke("GetTeacherByCourseId", new object[] {
                        code});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTeacherByCourseIdAsync(string code) {
            this.GetTeacherByCourseIdAsync(code, null);
        }
        
        /// <remarks/>
        public void GetTeacherByCourseIdAsync(string code, object userState) {
            if ((this.GetTeacherByCourseIdOperationCompleted == null)) {
                this.GetTeacherByCourseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeacherByCourseIdOperationCompleted);
            }
            this.InvokeAsync("GetTeacherByCourseId", new object[] {
                        code}, this.GetTeacherByCourseIdOperationCompleted, userState);
        }
        
        private void OnGetTeacherByCourseIdOperationCompleted(object arg) {
            if ((this.GetTeacherByCourseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeacherByCourseIdCompleted(this, new GetTeacherByCourseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/NameOfCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NameOfCourse([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code) {
            object[] results = this.Invoke("NameOfCourse", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NameOfCourseAsync(string code) {
            this.NameOfCourseAsync(code, null);
        }
        
        /// <remarks/>
        public void NameOfCourseAsync(string code, object userState) {
            if ((this.NameOfCourseOperationCompleted == null)) {
                this.NameOfCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameOfCourseOperationCompleted);
            }
            this.InvokeAsync("NameOfCourse", new object[] {
                        code}, this.NameOfCourseOperationCompleted, userState);
        }
        
        private void OnNameOfCourseOperationCompleted(object arg) {
            if ((this.NameOfCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameOfCourseCompleted(this, new NameOfCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetUniversityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetUniversityList() {
            object[] results = this.Invoke("GetUniversityList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUniversityListAsync() {
            this.GetUniversityListAsync(null);
        }
        
        /// <remarks/>
        public void GetUniversityListAsync(object userState) {
            if ((this.GetUniversityListOperationCompleted == null)) {
                this.GetUniversityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUniversityListOperationCompleted);
            }
            this.InvokeAsync("GetUniversityList", new object[0], this.GetUniversityListOperationCompleted, userState);
        }
        
        private void OnGetUniversityListOperationCompleted(object arg) {
            if ((this.GetUniversityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUniversityListCompleted(this, new GetUniversityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetFilterLisst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetFilterLisst() {
            object[] results = this.Invoke("GetFilterLisst", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilterLisstAsync() {
            this.GetFilterLisstAsync(null);
        }
        
        /// <remarks/>
        public void GetFilterLisstAsync(object userState) {
            if ((this.GetFilterLisstOperationCompleted == null)) {
                this.GetFilterLisstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilterLisstOperationCompleted);
            }
            this.InvokeAsync("GetFilterLisst", new object[0], this.GetFilterLisstOperationCompleted, userState);
        }
        
        private void OnGetFilterLisstOperationCompleted(object arg) {
            if ((this.GetFilterLisstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilterLisstCompleted(this, new GetFilterLisstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/AddFilterString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFilterString([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string content, out bool AddFilterStringResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddFilterStringResultSpecified) {
            object[] results = this.Invoke("AddFilterString", new object[] {
                        content});
            AddFilterStringResult = ((bool)(results[0]));
            AddFilterStringResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddFilterStringAsync(string content) {
            this.AddFilterStringAsync(content, null);
        }
        
        /// <remarks/>
        public void AddFilterStringAsync(string content, object userState) {
            if ((this.AddFilterStringOperationCompleted == null)) {
                this.AddFilterStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFilterStringOperationCompleted);
            }
            this.InvokeAsync("AddFilterString", new object[] {
                        content}, this.AddFilterStringOperationCompleted, userState);
        }
        
        private void OnAddFilterStringOperationCompleted(object arg) {
            if ((this.AddFilterStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFilterStringCompleted(this, new AddFilterStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/RemoveFilterString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFilterString([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string content, out bool RemoveFilterStringResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool RemoveFilterStringResultSpecified) {
            object[] results = this.Invoke("RemoveFilterString", new object[] {
                        content});
            RemoveFilterStringResult = ((bool)(results[0]));
            RemoveFilterStringResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void RemoveFilterStringAsync(string content) {
            this.RemoveFilterStringAsync(content, null);
        }
        
        /// <remarks/>
        public void RemoveFilterStringAsync(string content, object userState) {
            if ((this.RemoveFilterStringOperationCompleted == null)) {
                this.RemoveFilterStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFilterStringOperationCompleted);
            }
            this.InvokeAsync("RemoveFilterString", new object[] {
                        content}, this.RemoveFilterStringOperationCompleted, userState);
        }
        
        private void OnRemoveFilterStringOperationCompleted(object arg) {
            if ((this.RemoveFilterStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFilterStringCompleted(this, new RemoveFilterStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IndexOfUniversityCompletedEventHandler(object sender, IndexOfUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndexOfUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndexOfUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int IndexOfUniversityResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IndexOfUniversityResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void NameOfUniversityCompletedEventHandler(object sender, NameOfUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameOfUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameOfUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IndexOfJobTitleCompletedEventHandler(object sender, IndexOfJobTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndexOfJobTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndexOfJobTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int IndexOfJobTitleResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IndexOfJobTitleResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void NameOfJobTitleCompletedEventHandler(object sender, NameOfJobTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameOfJobTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameOfJobTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddTeacherCourseMapCompletedEventHandler(object sender, AddTeacherCourseMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeacherCourseMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeacherCourseMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddTeacherCourseMapResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddTeacherCourseMapResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DelTeacherCourseMapCompletedEventHandler(object sender, DelTeacherCourseMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTeacherCourseMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTeacherCourseMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DelTeacherCourseMapResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DelTeacherCourseMapResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCourseIdByTeacherCompletedEventHandler(object sender, GetCourseIdByTeacherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourseIdByTeacherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourseIdByTeacherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetTeacherByCourseIdCompletedEventHandler(object sender, GetTeacherByCourseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeacherByCourseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeacherByCourseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void NameOfCourseCompletedEventHandler(object sender, NameOfCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameOfCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameOfCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUniversityListCompletedEventHandler(object sender, GetUniversityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUniversityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUniversityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetFilterLisstCompletedEventHandler(object sender, GetFilterLisstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilterLisstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilterLisstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddFilterStringCompletedEventHandler(object sender, AddFilterStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFilterStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFilterStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddFilterStringResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddFilterStringResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveFilterStringCompletedEventHandler(object sender, RemoveFilterStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFilterStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFilterStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool RemoveFilterStringResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool RemoveFilterStringResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591