//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Admin.ForumService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IForumService", Namespace="http://tempuri.org/")]
    public partial class ForumService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostListByPosterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostReplyByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostReplyListByPostIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResponseToPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelResponseToPostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReplyResponseListByPostIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResponseToPostReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelResponseToPostReplyByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostTypeListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ForumService() {
            this.Url = global::Admin.Properties.Settings.Default.Admin_ForumService_ForumService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddPostCompletedEventHandler AddPostCompleted;
        
        /// <remarks/>
        public event DelPostCompletedEventHandler DelPostCompleted;
        
        /// <remarks/>
        public event GetPostListCompletedEventHandler GetPostListCompleted;
        
        /// <remarks/>
        public event GetPostListByPosterCompletedEventHandler GetPostListByPosterCompleted;
        
        /// <remarks/>
        public event GetPostByIdCompletedEventHandler GetPostByIdCompleted;
        
        /// <remarks/>
        public event GetPostReplyByIdCompletedEventHandler GetPostReplyByIdCompleted;
        
        /// <remarks/>
        public event UpdatePostCompletedEventHandler UpdatePostCompleted;
        
        /// <remarks/>
        public event GetPostReplyListByPostIdCompletedEventHandler GetPostReplyListByPostIdCompleted;
        
        /// <remarks/>
        public event AddResponseToPostCompletedEventHandler AddResponseToPostCompleted;
        
        /// <remarks/>
        public event DelResponseToPostByIdCompletedEventHandler DelResponseToPostByIdCompleted;
        
        /// <remarks/>
        public event GetReplyResponseListByPostIdCompletedEventHandler GetReplyResponseListByPostIdCompleted;
        
        /// <remarks/>
        public event AddResponseToPostReplyCompletedEventHandler AddResponseToPostReplyCompleted;
        
        /// <remarks/>
        public event DelResponseToPostReplyByIdCompletedEventHandler DelResponseToPostReplyByIdCompleted;
        
        /// <remarks/>
        public event GetPostTypeListCompletedEventHandler GetPostTypeListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/AddPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddPost([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PostModel model, out ReturnState AddPostResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddPostResultSpecified) {
            object[] results = this.Invoke("AddPost", new object[] {
                        model});
            AddPostResult = ((ReturnState)(results[0]));
            AddPostResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddPostAsync(PostModel model) {
            this.AddPostAsync(model, null);
        }
        
        /// <remarks/>
        public void AddPostAsync(PostModel model, object userState) {
            if ((this.AddPostOperationCompleted == null)) {
                this.AddPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPostOperationCompleted);
            }
            this.InvokeAsync("AddPost", new object[] {
                        model}, this.AddPostOperationCompleted, userState);
        }
        
        private void OnAddPostOperationCompleted(object arg) {
            if ((this.AddPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPostCompleted(this, new AddPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/DelPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelPost(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out ReturnState DelPostResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DelPostResultSpecified) {
            object[] results = this.Invoke("DelPost", new object[] {
                        id,
                        idSpecified});
            DelPostResult = ((ReturnState)(results[0]));
            DelPostResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DelPostAsync(int id, bool idSpecified) {
            this.DelPostAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DelPostAsync(int id, bool idSpecified, object userState) {
            if ((this.DelPostOperationCompleted == null)) {
                this.DelPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelPostOperationCompleted);
            }
            this.InvokeAsync("DelPost", new object[] {
                        id,
                        idSpecified}, this.DelPostOperationCompleted, userState);
        }
        
        private void OnDelPostOperationCompleted(object arg) {
            if ((this.DelPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelPostCompleted(this, new DelPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetPostList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
        public PostModel[] GetPostList() {
            object[] results = this.Invoke("GetPostList", new object[0]);
            return ((PostModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostListAsync() {
            this.GetPostListAsync(null);
        }
        
        /// <remarks/>
        public void GetPostListAsync(object userState) {
            if ((this.GetPostListOperationCompleted == null)) {
                this.GetPostListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostListOperationCompleted);
            }
            this.InvokeAsync("GetPostList", new object[0], this.GetPostListOperationCompleted, userState);
        }
        
        private void OnGetPostListOperationCompleted(object arg) {
            if ((this.GetPostListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostListCompleted(this, new GetPostListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetPostListByPoster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
        public PostModel[] GetPostListByPoster([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string poster) {
            object[] results = this.Invoke("GetPostListByPoster", new object[] {
                        poster});
            return ((PostModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostListByPosterAsync(string poster) {
            this.GetPostListByPosterAsync(poster, null);
        }
        
        /// <remarks/>
        public void GetPostListByPosterAsync(string poster, object userState) {
            if ((this.GetPostListByPosterOperationCompleted == null)) {
                this.GetPostListByPosterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostListByPosterOperationCompleted);
            }
            this.InvokeAsync("GetPostListByPoster", new object[] {
                        poster}, this.GetPostListByPosterOperationCompleted, userState);
        }
        
        private void OnGetPostListByPosterOperationCompleted(object arg) {
            if ((this.GetPostListByPosterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostListByPosterCompleted(this, new GetPostListByPosterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetPostById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PostModel GetPostById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetPostById", new object[] {
                        id,
                        idSpecified});
            return ((PostModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostByIdAsync(int id, bool idSpecified) {
            this.GetPostByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetPostByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetPostByIdOperationCompleted == null)) {
                this.GetPostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostById", new object[] {
                        id,
                        idSpecified}, this.GetPostByIdOperationCompleted, userState);
        }
        
        private void OnGetPostByIdOperationCompleted(object arg) {
            if ((this.GetPostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostByIdCompleted(this, new GetPostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetPostReplyById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PostReplyModel GetPostReplyById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetPostReplyById", new object[] {
                        id,
                        idSpecified});
            return ((PostReplyModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostReplyByIdAsync(int id, bool idSpecified) {
            this.GetPostReplyByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetPostReplyByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetPostReplyByIdOperationCompleted == null)) {
                this.GetPostReplyByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostReplyByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostReplyById", new object[] {
                        id,
                        idSpecified}, this.GetPostReplyByIdOperationCompleted, userState);
        }
        
        private void OnGetPostReplyByIdOperationCompleted(object arg) {
            if ((this.GetPostReplyByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostReplyByIdCompleted(this, new GetPostReplyByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/UpdatePost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePost([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PostModel model, out ReturnState UpdatePostResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdatePostResultSpecified) {
            object[] results = this.Invoke("UpdatePost", new object[] {
                        model});
            UpdatePostResult = ((ReturnState)(results[0]));
            UpdatePostResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdatePostAsync(PostModel model) {
            this.UpdatePostAsync(model, null);
        }
        
        /// <remarks/>
        public void UpdatePostAsync(PostModel model, object userState) {
            if ((this.UpdatePostOperationCompleted == null)) {
                this.UpdatePostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePostOperationCompleted);
            }
            this.InvokeAsync("UpdatePost", new object[] {
                        model}, this.UpdatePostOperationCompleted, userState);
        }
        
        private void OnUpdatePostOperationCompleted(object arg) {
            if ((this.UpdatePostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePostCompleted(this, new UpdatePostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetPostReplyListByPostId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
        public PostReplyModel[] GetPostReplyListByPostId(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetPostReplyListByPostId", new object[] {
                        id,
                        idSpecified});
            return ((PostReplyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostReplyListByPostIdAsync(int id, bool idSpecified) {
            this.GetPostReplyListByPostIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetPostReplyListByPostIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetPostReplyListByPostIdOperationCompleted == null)) {
                this.GetPostReplyListByPostIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostReplyListByPostIdOperationCompleted);
            }
            this.InvokeAsync("GetPostReplyListByPostId", new object[] {
                        id,
                        idSpecified}, this.GetPostReplyListByPostIdOperationCompleted, userState);
        }
        
        private void OnGetPostReplyListByPostIdOperationCompleted(object arg) {
            if ((this.GetPostReplyListByPostIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostReplyListByPostIdCompleted(this, new GetPostReplyListByPostIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/AddResponseToPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddResponseToPost([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PostReplyModel model, out ReturnState AddResponseToPostResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddResponseToPostResultSpecified) {
            object[] results = this.Invoke("AddResponseToPost", new object[] {
                        model});
            AddResponseToPostResult = ((ReturnState)(results[0]));
            AddResponseToPostResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddResponseToPostAsync(PostReplyModel model) {
            this.AddResponseToPostAsync(model, null);
        }
        
        /// <remarks/>
        public void AddResponseToPostAsync(PostReplyModel model, object userState) {
            if ((this.AddResponseToPostOperationCompleted == null)) {
                this.AddResponseToPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResponseToPostOperationCompleted);
            }
            this.InvokeAsync("AddResponseToPost", new object[] {
                        model}, this.AddResponseToPostOperationCompleted, userState);
        }
        
        private void OnAddResponseToPostOperationCompleted(object arg) {
            if ((this.AddResponseToPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResponseToPostCompleted(this, new AddResponseToPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/DelResponseToPostById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelResponseToPostById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out ReturnState DelResponseToPostByIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DelResponseToPostByIdResultSpecified) {
            object[] results = this.Invoke("DelResponseToPostById", new object[] {
                        id,
                        idSpecified});
            DelResponseToPostByIdResult = ((ReturnState)(results[0]));
            DelResponseToPostByIdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DelResponseToPostByIdAsync(int id, bool idSpecified) {
            this.DelResponseToPostByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DelResponseToPostByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.DelResponseToPostByIdOperationCompleted == null)) {
                this.DelResponseToPostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelResponseToPostByIdOperationCompleted);
            }
            this.InvokeAsync("DelResponseToPostById", new object[] {
                        id,
                        idSpecified}, this.DelResponseToPostByIdOperationCompleted, userState);
        }
        
        private void OnDelResponseToPostByIdOperationCompleted(object arg) {
            if ((this.DelResponseToPostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelResponseToPostByIdCompleted(this, new DelResponseToPostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetReplyResponseListByPostId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
        public PostReplyModel[] GetReplyResponseListByPostId(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetReplyResponseListByPostId", new object[] {
                        id,
                        idSpecified});
            return ((PostReplyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReplyResponseListByPostIdAsync(int id, bool idSpecified) {
            this.GetReplyResponseListByPostIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetReplyResponseListByPostIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetReplyResponseListByPostIdOperationCompleted == null)) {
                this.GetReplyResponseListByPostIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReplyResponseListByPostIdOperationCompleted);
            }
            this.InvokeAsync("GetReplyResponseListByPostId", new object[] {
                        id,
                        idSpecified}, this.GetReplyResponseListByPostIdOperationCompleted, userState);
        }
        
        private void OnGetReplyResponseListByPostIdOperationCompleted(object arg) {
            if ((this.GetReplyResponseListByPostIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReplyResponseListByPostIdCompleted(this, new GetReplyResponseListByPostIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/AddResponseToPostReply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddResponseToPostReply([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PostReplyModel model, out ReturnState AddResponseToPostReplyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddResponseToPostReplyResultSpecified) {
            object[] results = this.Invoke("AddResponseToPostReply", new object[] {
                        model});
            AddResponseToPostReplyResult = ((ReturnState)(results[0]));
            AddResponseToPostReplyResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddResponseToPostReplyAsync(PostReplyModel model) {
            this.AddResponseToPostReplyAsync(model, null);
        }
        
        /// <remarks/>
        public void AddResponseToPostReplyAsync(PostReplyModel model, object userState) {
            if ((this.AddResponseToPostReplyOperationCompleted == null)) {
                this.AddResponseToPostReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResponseToPostReplyOperationCompleted);
            }
            this.InvokeAsync("AddResponseToPostReply", new object[] {
                        model}, this.AddResponseToPostReplyOperationCompleted, userState);
        }
        
        private void OnAddResponseToPostReplyOperationCompleted(object arg) {
            if ((this.AddResponseToPostReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResponseToPostReplyCompleted(this, new AddResponseToPostReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/DelResponseToPostReplyById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelResponseToPostReplyById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out ReturnState DelResponseToPostReplyByIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DelResponseToPostReplyByIdResultSpecified) {
            object[] results = this.Invoke("DelResponseToPostReplyById", new object[] {
                        id,
                        idSpecified});
            DelResponseToPostReplyByIdResult = ((ReturnState)(results[0]));
            DelResponseToPostReplyByIdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DelResponseToPostReplyByIdAsync(int id, bool idSpecified) {
            this.DelResponseToPostReplyByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DelResponseToPostReplyByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.DelResponseToPostReplyByIdOperationCompleted == null)) {
                this.DelResponseToPostReplyByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelResponseToPostReplyByIdOperationCompleted);
            }
            this.InvokeAsync("DelResponseToPostReplyById", new object[] {
                        id,
                        idSpecified}, this.DelResponseToPostReplyByIdOperationCompleted, userState);
        }
        
        private void OnDelResponseToPostReplyByIdOperationCompleted(object arg) {
            if ((this.DelResponseToPostReplyByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelResponseToPostReplyByIdCompleted(this, new DelResponseToPostReplyByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IForumService/GetPostTypeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetPostTypeList() {
            object[] results = this.Invoke("GetPostTypeList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostTypeListAsync() {
            this.GetPostTypeListAsync(null);
        }
        
        /// <remarks/>
        public void GetPostTypeListAsync(object userState) {
            if ((this.GetPostTypeListOperationCompleted == null)) {
                this.GetPostTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostTypeListOperationCompleted);
            }
            this.InvokeAsync("GetPostTypeList", new object[0], this.GetPostTypeListOperationCompleted, userState);
        }
        
        private void OnGetPostTypeListOperationCompleted(object arg) {
            if ((this.GetPostTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostTypeListCompleted(this, new GetPostTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    public partial class PostModel {
        
        private string contentField;
        
        private int idField;
        
        private int noCommentsField;
        
        private string postTypeField;
        
        private string posterField;
        
        private System.DateTime publishDateField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int NoComments {
            get {
                return this.noCommentsField;
            }
            set {
                this.noCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PostType {
            get {
                return this.postTypeField;
            }
            set {
                this.postTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Poster {
            get {
                return this.posterField;
            }
            set {
                this.posterField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublishDate {
            get {
                return this.publishDateField;
            }
            set {
                this.publishDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Services.cnts")]
    public partial class PostReplyModel {
        
        private string contentField;
        
        private int idField;
        
        private System.DateTime responseDateField;
        
        private int responseToField;
        
        private string responserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ResponseDate {
            get {
                return this.responseDateField;
            }
            set {
                this.responseDateField = value;
            }
        }
        
        /// <remarks/>
        public int ResponseTo {
            get {
                return this.responseToField;
            }
            set {
                this.responseToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Responser {
            get {
                return this.responserField;
            }
            set {
                this.responserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum ReturnState {
        
        /// <remarks/>
        ReturnOK,
        
        /// <remarks/>
        ReturnError,
        
        /// <remarks/>
        SystemError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddPostCompletedEventHandler(object sender, AddPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState AddPostResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddPostResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DelPostCompletedEventHandler(object sender, DelPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState DelPostResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DelPostResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPostListCompletedEventHandler(object sender, GetPostListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPostListByPosterCompletedEventHandler(object sender, GetPostListByPosterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostListByPosterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostListByPosterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPostByIdCompletedEventHandler(object sender, GetPostByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPostReplyByIdCompletedEventHandler(object sender, GetPostReplyByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostReplyByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostReplyByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostReplyModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostReplyModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdatePostCompletedEventHandler(object sender, UpdatePostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState UpdatePostResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdatePostResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPostReplyListByPostIdCompletedEventHandler(object sender, GetPostReplyListByPostIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostReplyListByPostIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostReplyListByPostIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostReplyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostReplyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddResponseToPostCompletedEventHandler(object sender, AddResponseToPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResponseToPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResponseToPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState AddResponseToPostResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddResponseToPostResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DelResponseToPostByIdCompletedEventHandler(object sender, DelResponseToPostByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelResponseToPostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelResponseToPostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState DelResponseToPostByIdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DelResponseToPostByIdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReplyResponseListByPostIdCompletedEventHandler(object sender, GetReplyResponseListByPostIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReplyResponseListByPostIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReplyResponseListByPostIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostReplyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostReplyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddResponseToPostReplyCompletedEventHandler(object sender, AddResponseToPostReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResponseToPostReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResponseToPostReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState AddResponseToPostReplyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddResponseToPostReplyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DelResponseToPostReplyByIdCompletedEventHandler(object sender, DelResponseToPostReplyByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelResponseToPostReplyByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelResponseToPostReplyByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnState DelResponseToPostReplyByIdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DelResponseToPostReplyByIdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPostTypeListCompletedEventHandler(object sender, GetPostTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591